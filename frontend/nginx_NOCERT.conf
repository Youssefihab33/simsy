# This block handles HTTP traffic for the IP address 192.168.1.100
server {
    listen 80;
    server_name 192.168.1.100;

    # Ensure this is the correct root for content served by the IP
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;

    # No redirects here for the IP address
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
    }

    location /static/ {
        alias /usr/src/app/simsy/staticfiles/;
        expires 30d;
        add_header Cache-Control "public";
    }

    location /media/ {
        alias /usr/src/data/media/;
        expires 7d; # Cache media files in browser for 7 days
        add_header Cache-Control "public";
    }

    location /videos/ {
        alias /usr/src/data/videos/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        expires 7d;
        add_header Cache-Control "public";
    }

    location /captions/ {
        alias /usr/src/data/captions/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        expires 7d;
        add_header Cache-Control "public";
    }
}

# This block handles HTTP traffic for simsy.redirectme.net and redirects to HTTPS
server {
    listen 80;
    server_name simsy.redirectme.net; # Explicitly match the domain name

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic for this domain to HTTPS
    return 301 https://$host$request_uri;
}

# This block handles HTTPS traffic for simsy.redirectme.net
server {
    listen 443 ssl;
    server_name simsy.redirectme.net; # Explicitly match the domain name

    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_certificate /etc/letsencrypt/live/simsy.redirectme.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/simsy.redirectme.net/privkey.pem;

    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_protocols TLSv1.0 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:AES128+EECDH:AES128+EDH:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA';
#    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
    }

    location /static/ {
        alias /usr/src/app/simsy/staticfiles/;
        expires 30d;
        add_header Cache-Control "public";
    }

    location /media/ {
        alias /usr/src/data/media/;
        expires 7d; # Cache media files in browser for 7 days
        add_header Cache-Control "public";
    }

    location /videos/ {
        alias /usr/src/data/videos/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        expires 7d;
        add_header Cache-Control "public";
    }

    location /captions/ {
        alias /usr/src/data/captions/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        expires 7d;
        add_header Cache-Control "public";
    }
}
